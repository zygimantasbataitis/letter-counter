File model, rest api
Upload from UI files
Calculate words frequency
Result into seperate files and download instantly all
save files and results

REFACTOR
DEPLOY PROJECT TO SERVER

========= FIXES=====

==================TASK==================
1. Reikalavimai funkcionalumui
1.1. Programa turi mokėti nuskaityti N tekstinių failų. Tekstiniuose failuose – angliški žodžiai,
angliškas alfabetas.
1.2. Programa turi suskaičiuoti, kiek kartų kartojasi per visus failus kiekvienas toks pats žodis.
1.3. Rezultatą (žodis ir kartojimosi skaičius) įrašyti į keturis failus:
1.3.1. žodžiai prasidedantys raide A-G;
1.3.2. žodžiai prasidedantys raide H-N;
1.3.3. žodžiai prasidedantys raide O-U;
1.3.4. žodžiai prasidedantys raide V-Z.

2. Reikalavimai užduoties išpildymui
2.1. Technologijas, framework‘us galima rinktis laisvai.
2.2. Programuojant turi būti panaudotos gijos (threads).
2.3. Turi būti panaudotas pasirinktas Java development framework.
2.4. Pateiktas programinis kodas turi būti tvarkingas, lengvai skaitomas.
2.5. Panaudotos gerosios programavimo praktikos: naudojamos objektinio ar funkcinio programavimo
paradigmos, pritaikomi programinio kodo perpanaudojimo, paprastumo ir kiti pagrindiniai
principai.

3. Papildomi balai bus skiriami, jei (atlikti nebūtina):
3.1. Bus paruošta web application, kuri turės GUI interface.
3.2. Bus panaudotas file upload mechanizmas, bus galima uploadinti N failų.
3.3. Rezultatai bus pateikiami ir web application GUI.
3.4. Bus panaudotas software container sprendimas (pvz. Docker).

Reikalavimai pateikiamam rezultatui:
Užduotį prašytume pateikti el. paštu: jobs@metasite.net .

Prašome darbo rezultatą patalpinti prieinamoje vietoje peržiūrai 
(pvz. www.herokuapp.com,
https://aws.amazon.com/free/ , 
https://cloud.google.com/free/ , 
https://azure.microsoft.com/en-us/offers/ms-azr-0044p/ ir pan.), 
o source code patalpinti kuriame nors viešajame kodo versijavimo
servise (github, bitbucket ar kt.).